on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@master
    
    - uses: pietrobolcato/install-azure-cli-action@v1
    # now run any step that would require the `az` command line utility, eg:
    
    - name: az login
      run: az login
        
    - name: Create ACR
      id: create-acr
      run: |
        az acr create -n votingappacrr -g trial-rg --location "South Central US" --sku Standard --admin-enabled
        echo "::set-output name=acr_username::`az acr credential show -n deploymentcenter --query username | xargs`"
        echo "::set-output name=acr_password::`az acr credential show -n deploymentcenter --query passwords[0].value | xargs`"
        echo "::add-mask::`az acr credential show -n deploymentcenter --query passwords[0].value | xargs`"

    - uses: azure/docker-login@v1
      with:
        login-server: votingappacrr.azurecr.io
        username: votingappacrr
        password: pV3BYa+ys9xhS9q2XtoBd4ZG/Bo02QzU9lRuaPDGFC+ACRBtqkQJ

    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/azure-vote" -f  "azure-vote/Dockerfile" -t votingappacrr.azurecr.io/deploymentcentertest:latest --label dockerfile-path=azure-vote/Dockerfile
        docker push votingappacrr.azurecr.io/deploymentcentertest:latest
        
    - name: List Docker Images
      run: docker images
      
    - name: Tag Docker images
      run: votingappacrr.azurecr.io/deploymentcentertest:latest
        
    - name: Push Docker image 
      run: docker push votingappacrr.azurecr.io/deploymentcentertest:latest
    
    - uses: azure/k8s-set-context@v1
      id: login
      with:
         kubeconfig: ${{ secrets.aks_deploymentcentertest1_kubeConfig }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep voting-ns | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace voting-ns`
        fi    
    - uses: azure/k8s-create-secret@v1
      with:
        namespace: voting-ns
        container-registry-url: votingappacrr.azurecr.io
        container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
        container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
        secret-name: votesecret
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: deploymentcentertestbe49
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
          
        # images: |
        #   deploymentcenter.azurecr.io/deploymentcentertest:${{ github.sha }}
        #imagepullsecrets: |
          #brsasecret   
